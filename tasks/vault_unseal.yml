---

- name: Ensure decrypt ansible_done_vault_init
  ansible.builtin.shell:
    cmd: >
      openssl enc -aes-256-cbc -pbkdf2 -pass env:SECRET -d -out {{ vault_home_path }}/.ansible_done_vault_init -in {{ vault_home_path }}/ansible_done_vault_init
  environment:
    SECRET: "{{ vault_encrypt_secret }}"
  changed_when: false

- name: Slurp vault init info
  ansible.builtin.slurp:
    src: "{{ vault_home_path }}/.ansible_done_vault_init"
  register: _vault_init_file_slurp

- name: Ensure remove "{{ vault_home_path }}/.ansible_done_vault_init"
  ansible.builtin.file:
    path: "{{ vault_home_path }}/.ansible_done_vault_init"
    state: absent
  changed_when: false

- name: Set fact _vault_init_info from slurp
  ansible.builtin.set_fact:
    _vault_init_info: "{{ _vault_init_file_slurp['content'] | b64decode }}"

- name: Set fact _vault_unseal_keys
  ansible.builtin.set_fact:
    _vault_unseal_keys:  "{{ _vault_init_info.unseal_keys_b64 }}"

- name: Set fact _vault_root_token
  ansible.builtin.set_fact:
    _vault_root_token: "{{ _vault_init_info.root_token }}"
  when: not vault_revoke_root_token or not _vault_initialized

- name: Print fact _vault_unseal_keys
  ansible.builtin.debug:
    msg: "_vault_unseal_keys: {{ _vault_unseal_keys }}"
  when: vault_show_unseal_keys

- name: Print fact _vault_root_token
  ansible.builtin.debug:
    msg: "_vault_root_token: {{ _vault_root_token }}"
  when: vault_show_initial_root_token and not vault_revoke_root_token

- name: Set facts vault status exit codes  ## noqa var-naming
  ansible.builtin.set_fact:
    _VAULT_STATUS_UNSEALED: 0
    _VAULT_STATUS_ERROR:    1
    _VAULT_STATUS_SEALED:   2

- name: Get vault status output
  ansible.builtin.shell:
    cmd: >
      {{ _vault_command_prefix }} {{ _vault_command_postfix }} status -format=json
  register: _vault_status_output
  failed_when: _vault_status_output.rc == _VAULT_STATUS_ERROR
  changed_when: false

- name: Ensure unseal vault
  ansible.builtin.shell:
    cmd: >
      {{ _vault_command_prefix }} {{ _vault_command_postfix }} operator unseal {{ _vault_unseal_keys[_vault_unseal_key_index] }}
  loop: "{{ range(0, vault_key_threshold) | list }}"
  loop_control:
    index_var: _vault_unseal_key_index
  when: _vault_status_output.rc == _VAULT_STATUS_SEALED

...
