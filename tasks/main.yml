---

- name: Ensure prepare community.docker.docker_container
  ansible.builtin.include_tasks: docker_container.yml

- name: Ensure vault config
  ansible.builtin.include_tasks: vault_config.yml

- name: Ensure vault
  community.docker.docker_container:
    name:    vault
    image:   vault:{{ vault_version }}
    command: server
    capabilities:
      - ipc_lock
    ports:
      - "{{ vault_docker_expose_api }}"
      - "{{ vault_docker_expose_cluster }}"
    env:
      VAULT_ADDR: http://127.0.0.1:{{ vault_docker_api_port }}
    volumes:
      - "{{ vault_home }}/logs:/vault/logs"
      - "{{ vault_home }}/file:/vault/file"
      - "{{ vault_home }}/config:/vault/config"
    restart_policy:             always
    container_default_behavior: compatibility
    # state: "{{ vault_docker_container_state }}"

- name: Ensure vault init
  ansible.builtin.include_tasks: vault_init.yml
  run_once: yes

- name: Ensure vault is active
  ansible.builtin.include_tasks: vault_wait.yml
  run_once: yes

- name: Ensure vault enable auth methods 
  ansible.builtin.include_tasks: auth_method.yml
  loop: "{{ vault_auth_methods }}"
  loop_control:
    loop_var: _vault_auth_method
  run_once: yes
  
- name: Ensure vault enable secret engines 
  ansible.builtin.include_tasks: secret_engine.yml
  loop: "{{ vault_secret_engines }}"
  loop_control:
    loop_var: _vault_secret_engine
  run_once: yes

- name: Ensure vault write policies
  ansible.builtin.include_tasks: policy.yml
  loop: "{{ vault_policies }}"
  loop_control:
    loop_var: _vault_policy
    label: "{{ _vault_policy.name }}"
  run_once: yes

- name: Ensure vault writes
  ansible.builtin.include_tasks: write.yml
  loop: "{{ vault_writes }}"
  loop_control:
    loop_var: _vault_write
    label: "{{ _vault_write.path }}"
  run_once: yes

...