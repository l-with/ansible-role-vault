---

- name: Check {{ vault_encrypt_secret }}
  ansible.builtin.fail:
    msg: "variable 'vault_encrypt_secret' is not set"
  when: not lookup('vars', 'vault_encrypt_secret')

- name: Check {{ vault_install_method }}
  ansible.builtin.fail:
    msg: "vault_install_method '{{ vault_install_method }}' not supported"
  when: vault_install_method not in ['docker', 'service']
  
- name: Ensure prepare dependencies
  ansible.builtin.include_tasks: dependencies.yml

- name: Ensure install vault
  ansible.builtin.include_tasks: "vault_install_{{ vault_install_method }}.yml"

- name: Ensure vault TLS files
  ansible.builtin.include_tasks: vault_tls.yml

- name: Ensure vault config
  ansible.builtin.include_tasks: vault_config_{{ vault_install_method }}.yml

- name: Read /etc/letsencrypt stat
  ansible.builtin.stat:
    path: /etc/letsencrypt
  ignore_errors: true
  register: _vault_etc_lets_encrypt_path_stat

- name: Set fact _vault_etc_lets_encrypt_path
  ansible.builtin.set_fact:
    _vault_etc_lets_encrypt_path: "{{ _vault_etc_lets_encrypt_path_stat.stat.exists }}"

- name: Ensure vault is group and owner of Let's Encrypt Certificate Package files
  ansible.builtin.file:
    path:    /etc/letsencrypt
    recurse: true
    group:   vault
    owner:   vault
  when: vault_install_method == 'service' and _vault_etc_lets_encrypt_path

- name: Ensure vault started
  ansible.builtin.include_tasks: vault_start_{{ vault_install_method }}.yml

- name: Get vault status
  ansible.builtin.include_tasks: vault_status.yml
  
- name: Wait vault
  ansible.builtin.shell:
    cmd: >
      {{ _vault_command_prefix }} {{ _vault_command_postfix }} status -format=json || /bin/true
  register: _vault_status_output
  until: _vault_status_output.stdout is defined
  retries: 10
  delay: 2
  changed_when: false
  
- name: Ensure vault init
  ansible.builtin.include_tasks: vault_init.yml
  
- name: Get vault status
  ansible.builtin.include_tasks: vault_status.yml
  
- name: Ensure vault unseal
  ansible.builtin.include_tasks: vault_unseal.yml
  
- name: Get vault status
  ansible.builtin.include_tasks: vault_status.yml

- name: Wait vault active when HA
  ansible.builtin.shell:
    cmd: >
      {{ _vault_command_prefix }} {{ _vault_command_postfix }} status -format=json
  register: _vault_status_output
  until: _vault_status_output.stdout.find("leader_") != -1
  retries: 20
  delay: 2
  changed_when: false
  when: _vault_status.ha_enabled
  # run_once: true

- name: Ensure vault root token
  ansible.builtin.include_tasks: vault_root_token.yml
  when: vault_create_root_token
  run_once: true

- name: Ensure vault application configurations
  ansible.builtin.include_tasks: vault_app_config.yml
  run_once: true

...
