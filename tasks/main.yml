---

- name: Check {{ vault_encrypt_secret }}
  ansible.builtin.fail:
    msg: "variable 'vault_encrypt_secret' is not set"
  when: not lookup('vars', 'vault_encrypt_secret')

- name: Check {{ vault_install_method }}
  ansible.builtin.fail:
    msg: "vault_install_method '{{ vault_install_method }}' not supported"
  when: vault_install_method not in ['docker']
  
- name: Ensure prepare dependencies
  ansible.builtin.include_tasks: dependencies.yml

- name: Ensure vault config
  ansible.builtin.include_tasks: vault_config_{{ vault_install_method }}.yml

- name: Ensure vault
  ansible.builtin.include_tasks: "vault_install_{{ vault_install_method }}.yml"

- name: Get vault status
  ansible.builtin.include_tasks: vault_status.yml
  # run_once: true

- name: Wait vault
  ansible.builtin.shell:
    cmd: >
      {{ _vault_command_prefix }} {{ _vault_command_postfix }} status -format=json || /bin/true
  register: _vault_status_output
  until: _vault_status_output.stdout is defined
  retries: 10
  delay: 2
  changed_when: false
  # run_once: true

- name: Ensure vault init
  ansible.builtin.include_tasks: vault_init.yml
  # run_once: true

- name: Get vault status
  ansible.builtin.include_tasks: vault_status.yml
  # run_once: true

- name: Wait vault active when HA
  ansible.builtin.command:
    cmd: >
      {{ _vault_command_prefix }} {{ _vault_command_postfix }} status -format=json
  register: _vault_status_output
  until: _vault_status_output.stdout.find("leader_") != -1
  retries: 10
  delay: 2
  changed_when: false
  when: _vault_status.ha_enabled
  # run_once: true

- name: Ensure vault root token
  ansible.builtin.include_tasks: vault_root_token.yml
  when: vault_create_root_token
  run_once: true

- name: Ensure vault enable auth methods
  ansible.builtin.include_tasks: vault_auth_enable.yml
  loop: "{{ vault_auth_methods }}"
  loop_control:
    loop_var: _vault_auth_method
  run_once: true

- name: Ensure vault enable secret engines
  ansible.builtin.include_tasks: vault_secrets_enable.yml
  loop: "{{ vault_secret_engines }}"
  loop_control:
    loop_var: _vault_secret_engine
  run_once: true

- name: Ensure vault policy writes
  ansible.builtin.include_tasks: vault_policy_write.yml
  loop: "{{ vault_policy_writes }}"
  loop_control:
    loop_var: _vault_policy_write
    label: "{{ _vault_policy_write.name }}"
  run_once: true

- name: Ensure vault writes
  ansible.builtin.include_tasks: vault_write.yml
  loop: "{{ vault_writes }}"
  loop_control:
    loop_var: _vault_write
    label: "{{ _vault_write.path }}"
  run_once: true

- name: Ensure vault kv deletes
  ansible.builtin.include_tasks: vault_kv_delete.yml
  loop: "{{ vault_kv_deletes }}"
  loop_control:
    loop_var: _vault_kv_delete
    label: "{{ _vault_kv_delete.path }}"
  run_once: true

- name: Ensure vault kv puts
  ansible.builtin.include_tasks: vault_kv_put.yml
  loop: "{{ vault_kv_puts }}"
  loop_control:
    loop_var: _vault_kv_put
    label: "{{ _vault_kv_put.path }}"
  run_once: true

- name: Ensure vault app role credentials
  ansible.builtin.include_tasks: vault_approle.yml
  loop: "{{ vault_approles }}"
  loop_control:
    loop_var: _vault_approle
  run_once: true

...
