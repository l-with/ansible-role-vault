---

- name: Read nomad init file stat
  ansible.builtin.stat:
    path: "{{ vault_home }}/ansible_done_vault_init"
  ignore_errors: true
  register: _vault_init_file_stat

- name: Set fact _vault_initialized
  ansible.builtin.set_fact:
    _vault_initialized: "{{ _vault_init_file_stat.stat.exists }}"

- name: Ensure vault init when not initialized before
  ansible.builtin.shell:
    cmd: >
      docker exec vault 
      vault operator init -key-shares 1 -key-threshold 1 -format=json 
      | tee {{ vault_home }}/ansible_done_vault_init
    creates: "{{ vault_home }}/ansible_done_vault_init"
  when: not _vault_initialized
  run_once: yes

- name: Skurp vault init info
  ansible.builtin.slurp:
    src: "{{ vault_home }}/ansible_done_vault_init"
  register: _vault_init_file_slurp
  run_once: yes

- name: Set fact _vault_init_info from slurp
  ansible.builtin.set_fact:
    _vault_init_info: "{{ _vault_init_file_slurp['content'] | b64decode }}"
  run_once: yes

- name: Print fact _vault_init_info
  ansible.builtin.debug:
    msg: "_vault_init_info: {{ _vault_init_info }}"
  when: vault_show_unseal_keys
  run_once: yes

- name: Set fact _vault_unseal_key
  ansible.builtin.set_fact:
    _vault_unseal_key:  "{{ _vault_init_info.unseal_keys_b64[0] }}"
  run_once: yes

- name: Set fact _vault_root_token
  ansible.builtin.set_fact:
    _vault_root_token: "{{ _vault_init_info.root_token }}"
  run_once: yes

- name: Print fact _vault_unseal_key
  ansible.builtin.debug:
    msg: "_vault_unseal_key: {{ _vault_unseal_key }}"
  when: vault_show_unseal_keys
  run_once: yes

- name: Print fact _vault_root_token
  ansible.builtin.debug:
    msg: "_vault_root_token: {{ _vault_root_token }}"
  when: vault_show_root_token
  run_once: yes

- name: Ensure unseal vault
  ansible.builtin.shell:
    cmd: >
      docker exec vault 
      vault operator unseal {{ _vault_unseal_key }} 
      | tee {{ vault_home }}/ansible_done_vault_unseal
    creates: "{{ vault_home }}/ansible_done_vault_unseal"
  run_once: yes

...